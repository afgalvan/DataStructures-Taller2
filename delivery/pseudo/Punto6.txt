/*
* Se tienen 2 listas enlazadas simples cuyas cabezas son: cab1 y cab2 respectivamente.
* Escriba una solución al problema consistente en AGREGAR o RETIRAR de la lista cab1,
* todos aquellos nodos que en la lista cab2 tengan en el campo Accion un carácter
* "A" o "R", respectivamente.
*/


DEFINIR Nodo1
    entero codigo
    Nodo1 *siguiente
FIN Nodo

DEFINIR ListaEnlazada1
    Nodo1 *cabeza
    Nodo1 *ultimo
FIN ListaEnlazada

DEFINIR Nodo2
    entero codigo
    char accion 
    Nodo2 *siguiente
FIN Nodo2

DEFINIR ListaEnlazada2
    Nodo2 *cabeza
    Nodo2 *ultimo
FIN ListaEnlazada2


// Append nodo O(1)
FUNCION agregarNodo1(ListaEnlazada1 lista, Nodo1 *nodo)
    nodo^.anterior <- NULL
    nodo^.siguiente <- NULL

    SI (lista.cabeza = NULL) ENTONCES
        lista.cabeza <- nodo
        lista.ultimo <- nodo
    SINO
        lista.ultimo^.siguiente <- nodo
        nodo^.anterior <- lista^.ultimo
        lista.ultimo <- nodo
    FIN_SI
FIN agregarNodo1


FUNCION llenarDatos1(ListaEnlazada1 lista1)
    continuar <- "s"

    MIENTRAS (continuar = "s") HACER
        // Crear nuevo nodo
        Nodo1 *nodo
        NEW(nodo)
        SI (nodo = NULL) ENTONCES
            ESCRIBIR "No hay memoria disponible en el sistema"
        SINO
            ESCRIBIR "Ingrese un numero: "
            LEER(nodo^.dato)
            agregarNodo1(lista, nodo)
            ESCRIBIR "Desea agregar otro nodo a la lista? [S/N]: "
            LEER(continuar) 
        FIN_SI
    FIN_MIENTRAS
FIN llenarDatos1


// Append nodo O(1)
FUNCION agregarNodo2(ListaEnlazada2 lista, Nodo2 *nodo)
    nodo^.anterior <- NULL
    nodo^.siguiente <- NULL

    SI (lista.cabeza = NULL) ENTONCES
        lista.cabeza <- nodo
        lista.ultimo <- nodo
    SINO
        lista.ultimo^.siguiente <- nodo
        nodo^.anterior <- lista^.ultimo
        lista.ultimo <- nodo
    FIN_SI
FIN agregarNodo2


FUNCION llenarDatos2(ListaEnlazada2 lista2)
    ESCRIBIR  "LLENADO DE DATOS"
    continuar <- "s"

    MIENTRAS (continuar = "s") HACER
        // Crear nuevo nodo
        Nodo2 *nodo
        NEW(nodo)
        SI (nodo = NULL) ENTONCES
            ESCRIBIR "No hay memoria disponible en el sistema"
        SINO
            ESCRIBIR "Ingrese un numero: "
            LEER(nodo^.dato)
            ESCRIBIR "Ingrese la accion: "
            LEER(nodo^.accion)
            agregarNodo2(lista, nodo)
            ESCRIBIR "Desea agregar otro nodo a la lista? [S/N]: "
            LEER(continuar) 
        FIN_SI
    FIN_MIENTRAS
FIN llenarDatos2


FUNCION agregar(ListaEnlazada1 lista1, entero codigo)
    Nodo1 *nodo
    NEW(nodo)
    nodo^.codigo <- codigo
    agregarNodo(lista1, nodo)
FIN agregar


FUNCION buscarNodoPorCodigo(ListaEnlazada1 lista1, entero codigo)
    encontrado <- false
    Nodo1 *cursor <- lista1.cabeza
    Nodo1 *nodoEncontrado # NULL
    
    MIENTRAS (cursor <> NULL) AND (encontrado = false) HACER
        SI (cursor^.codigo = codigo) ENTONCES
            nodoEncontrado <- cursor
            encontrado <- true
        SINO
            cursor <- cursor^.siguiente
        FIN_SI
    FIN_MIENTRAS

    RETORNAR nodoEncontrado
FIN buscarNodoPorCodigo


FUNCION pop(ListaEnlazada1 lista1)
    nodoBorrar <- lista1.cabeza
    lista1.cabeza <- lista1.cabeza^.siguiente
    DELETE(nodoBorrar)
FIN pop


FUNCION detach(ListaEnlazada1 lista1)
    Nodo1 *cursor
    cursor <- lista1.cabeza

    MIENTRAS(cursor^.siguiente^.siguiente <> null) HACER
        cursor <- cursor^.siguiente
    FIN_MIENTRAS

    Nodo *nodoBorrar
    nodoBorrar <- lista1.ultimo
    lista1.ultimo <- cursor
    lista1.ultimo^.siguiente <- null
    nodoBorrar^.siguiente <- null
    DELETE(nodoBorrar)
FIN detach


FUNCION borrarNodoMitad(ListaEnlazada1 lista1, Nodo1 *nodoBorrar)
    Nodo1 *cursor
    cursor <- lista1.cabeza^.siguiente

    MIENTRAS (cursor^.siguiente^.siguiente <> NULL) AND (cursor^.siguiente <> nodoBorrar) HACER
        cursor <- cursor^.siguiente
    FIN_MIENTRAS

    SI (cursor^.siguiente = nodoBorrar) HACER
        cursor^.siguiente <- nodoBorrar^.siguiente
        nodoBorrar^.siguiente <- NULL
        DELETE(nodoBorrar)
    FIN_SI
FIN borrarNodoMitad


FUNCION borrarNodo(ListaEnlazada1 lista1, Nodo1 *nodoBorrar)
    SI (nodoBorrar = lista1.cabeza) ENTONCES
        pop(lista1)
    SINO
        SI (nodoBorrar = lista1.ultimo) ENTONCES
            detach(lista1)
        SINO
            borrarNodoMitad(lista1, nodoBorrar)
        FIN_SI
    FIN_SI
FIN borrarNodo

FUNCION borrar(ListaEnlazada1 lista1, entero codigo)
    Nodo1 *nodoBorrar

    REPETIR
        nodoBorrar <- buscarNodoPorCodigo(lista1, codigo)
        SI (nodoBorrar <> NULL) ENTONCES
            borrarNodo(lista1, nodoBorrar)
        FIN_SI
    HASTA (nodoBorrar = NULL)
FIN borrar


FUNCION ejecutarAccion(ListaEnlazada1 lista1, ListaEnlazada2 lista2)
    // 2 -> 5 -> 6 -> NULL
    // 1 -> 3 -> 9 -> 6 -> NULL
    // R         A
    Nodo2 *cursor2 <- lista2^.cabeza
    MIENTRAS (cursor2 <> NULL) HACER
        SI (cursor2^.accion = 'A') ENTONCES
            agregar(lista1, cursor2^.codigo)
        SINO
            SI (cursor2^.accion = 'R') ENTONCES
                borrar(lista1, cursor2^.codigo)
            FIN_SI
        FIN_SI
        cursor2 <- cursor2^.siguiente
    FIN_MIENTRAS
FIN ejecutarAccion


FUNCION mostrarLista1(ListaEnlazada1 lista1)
    Nodo1 *cursor
    cursor <- lista1.cabeza
    MIENTRAS (cursor <> NULL) HACER
        ESCRIBIR "{ dato: ", cursor^.dato, "} -> "
        cursor <- cursor^.siguiente
    FIN_MIENTRAS

    ESCRIBIR "NULL"
FIN mostrarLista1


FUNCION mostrarLista2(ListaEnlazada2 lista2)
    Nodo2 *cursor
    cursor <- lista2.cabeza
    MIENTRAS (cursor <> NULL) HACER
        ESCRIBIR "{ dato: ", cursor^.dato, "accion: ", cursor^.accion, "} -> "
        cursor <- cursor^.siguiente
    FIN_MIENTRAS

    ESCRIBIR "NULL"
FIN mostrarLista2


PROGRAMA_PRINCIPAL
    ListaEnlazada1 lista1
    ListaEnlazada2 lista2

    ESCRIBIR  "LLENADO DE DATOS LISTA 1"
    llenarDatos1(lista1)
    ESCRIBIR  "-------------------------"
    ESCRIBIR  "LLENADO DE DATOS LISTA 2"
    llenarDatos2(lista2)
    
    ESCRIBIR "Lista 1 original"
    mostrarLista1(lista1)
    ESCRIBIR "Lista 2"
    mostrarLista2(lista2)

    ejecutarAccion(lista1, lista2)
    ESCRIBIR "Resultado"
    ESCRIBIR "Lista 1"
    mostrarLista1(lista1)
    ESCRIBIR "Lista 2"
    mostrarLista2(lista2)
FIN PROGRAMA_PRINCIPAL